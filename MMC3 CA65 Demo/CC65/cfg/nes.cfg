# The LOW and HIGH banks are not used in this ROM, but they are included for
# completion.  If you end up needing more space, uncomment LOW and HIGH pairs,
# starting at 00, in both the MEMORY and SEGMENT sections.

MEMORY {
    ZP:     start = $05,    size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;

    # PRG ROM Banks 

    BANK0:  start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
    BANK1:  start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
    BANK2:  start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
    BANK3:  start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
    BANK4:  start = $8000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
    BANK5:  start = $A000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;

    #...
    #...

    PRG_CODE:    start = $C000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
    PRG_FIXED:   start = $E000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;

        # ! 16 Banks of 8K CHR ROM
    CHR: start = $0000, size = $20000, file = %O, fill = yes;

}

SEGMENTS {
    ZEROPAGE:   load = ZP,  type = zp;
    SPRITES:    load = OAM, type = bss, align = $100, optional = yes;
    RAM:        load = RAM, type = bss;
    HEADER:     load = HDR, type = ro, align = $10;

    BANK0:      load = BANK0,   type = ro;
    BANK1:      load = BANK1,   type = ro;
    BANK2:      load = BANK2,   type = ro;
    BANK3:      load = BANK3,   type = ro;
    BANK4:      load = BANK4,   type = ro;
    BANK5:      load = BANK5,   type = ro;

    PAGE_FIXED: load = PRG_FIXED, type = ro;
    VECTORS:    load = PRG_FIXED, type = ro, start = $FFFA;

        # Swapable 128 kb stay out of the first two 16k as they are above 
    CHR:    load = CHR,            type = rw;

}